{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","redux/Phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/Phonebook/phonebook-actions.js","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/App/App.js","redux/Phonebook/filter-reducer.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","getContacts","state","phoneBook","contactItems","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","post","deleteContact","contactId","delete","id","ContactForm","useState","setName","phone","setPhone","contacts","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","changeFilter","createAction","Filter","currentTarget","Contact","number","propType","PropTypes","string","isRequired","ContactsList","useEffect","map","item","onClick","App","contactsTitle","filterReducer","createReducer","action","payload","contactsSlice","createSlice","initialState","loading","error","extraReducers","fulfilled","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c35660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__bAHji\",\"input\":\"Filter_input__1YwPe\",\"filter\":\"Filter_filter__250h5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__1zPbJ\",\"number\":\"Contact_number__BX_ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1oI_K\",\"button\":\"ContactsList_button__1I1zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3JFB8\",\"contactsTitle\":\"App_contactsTitle__3hkYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eQXo\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phoneBook.contactItems;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactItems, filter) =>\r\n    contactItems.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61a77f92387ab200171d2d34.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already exist`);\n    }\n    dispatch(addContact({ name, phone }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={phone}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = createAction('contact/add');\r\n// export const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={onChangeInput}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, phone, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={phone} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import Container from '../Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.contactsTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { changeFilter } from '../Phonebook/phonebook-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n","// import { createReducer } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './phonebook-operations';\r\n\r\n// const initialState = {\r\n//   contacts: [],\r\n//   filter: '',\r\n//   loading: false,\r\n// };\r\n\r\n// const contactItems = createReducer(initialState.contacts, {\r\n//   [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n//   [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n//   [deleteContact.fulfilled]: (state, { payload }) =>\r\n//     state.filter(({ id }) => id !== payload),\r\n// });\r\n\r\n// const loading = createReducer(initialState.loading, {\r\n//   [fetchContacts.pending]: () => true,\r\n//   [fetchContacts.fulfilled]: () => false,\r\n//   [fetchContacts.rejected]: () => false,\r\n\r\n//   [addContact.pending]: () => true,\r\n//   [addContact.fulfilled]: () => false,\r\n//   [addContact.rejected]: () => false,\r\n\r\n//   [deleteContact.pending]: () => true,\r\n//   [deleteContact.fulfilled]: () => false,\r\n//   [deleteContact.rejected]: () => false,\r\n// });\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: { contactItems: [], loading: false, error: null },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: action.payload,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [fetchContacts.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [fetchContacts.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n\r\n    [addContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: [...state.contactItems, action.payload],\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [addContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [addContact.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n\r\n    [deleteContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: state.contactItems.filter(\r\n        ({ id }) => id !== action.payload,\r\n      ),\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [deleteContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [deleteContact.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { filterReducer } from './Phonebook/filter-reducer';\r\nimport contactsSlice from './Phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: contactsSlice,\r\n    filter: filterReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//импорт компонента Провайдер\nimport { Provider } from 'react-redux';\n//импорт объекта глобального состояния\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WiYD\",\"label\":\"ContactForm_label__38fIA\",\"input\":\"ContactForm_input__1pXP4\",\"button\":\"ContactForm_button__1Fult\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","redux/Phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/App/App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","getContacts","state","contacts","contactItems","getFilter","filter","getFilteredContacts","lowerCasedFilter","toLowerCase","name","includes","actions","addContact","createAction","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","Filter","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","map","item","onClick","App","contactsTitle","createReducer","initialContacts","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a573d3fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__bAHji\",\"input\":\"Filter_input__1YwPe\",\"filter\":\"Filter_filter__250h5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__1zPbJ\",\"number\":\"Contact_number__BX_ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1oI_K\",\"button\":\"ContactsList_button__1I1zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3JFB8\",\"contactsTitle\":\"App_contactsTitle__3hkYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eQXo\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","export const getContacts = state => state.contacts.contactItems;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getFilteredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\n// import { DELETE, SUBMIT, CHANGE_FILTER } from './phonebook-types';\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: SUBMIT,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n//reduxjs/toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './ContactForm.module.css';\n// import PropTypes from 'prop-types';\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={onChangeInput}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// import { connect } from 'react-redux';\n// import actions from '../../redux/Phonebook/phonebook-actions';\n// import { useState, useEffect } from 'react';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n// import initialContacts from '../../contacts.json';\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.contactsTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state,\n//   };\n// };\n// const mapDispatchToProps = dispatch => ({\n//   addNote: text => dispatch(actions.addContact(text)),\n// });\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './phonebook-actions';\r\nimport initialContacts from '../../contacts.json';\r\n// import { SUBMIT, DELETE, CHANGE_FILTER } from './phonebook-types';\r\n\r\n// const contacts = (state = initialContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case SUBMIT:\r\n//       console.log(type, payload);\r\n//       return state.some(\r\n//         el => el.name.toLowerCase() === payload.name.toLowerCase(),\r\n//       )\r\n//         ? alert(`${payload.name} is already in the directory.`)\r\n//         : [...state, payload];\r\n\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n//reduxjs/Toolkit\r\n\r\nconst contactItems = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contactItems, filter });\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './Phonebook/phonebook-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//хранилище с toolkit\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n// const rootReducer = combineReducers({ phonebook: phonebookReducer });\r\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//импорт компонента Провайдер\nimport { Provider } from 'react-redux';\n//импорт объекта глобального состояния\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WiYD\",\"label\":\"ContactForm_label__38fIA\",\"input\":\"ContactForm_input__1pXP4\",\"button\":\"ContactForm_button__1Fult\"};"],"sourceRoot":""}